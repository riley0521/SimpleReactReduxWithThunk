[{"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\index.js":"1","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\App.js":"2","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\store.js":"3","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\reportWebVitals.js":"4","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\usersSlice.js":"5","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\UserList.jsx":"6","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\AddUser.jsx":"7","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\EditUser.jsx":"8"},{"size":567,"mtime":1658991460259,"results":"9","hashOfConfig":"10"},{"size":597,"mtime":1658996989697,"results":"11","hashOfConfig":"10"},{"size":206,"mtime":1658990590093,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1658987560956,"results":"13","hashOfConfig":"10"},{"size":1103,"mtime":1658994918351,"results":"14","hashOfConfig":"10"},{"size":1808,"mtime":1658995735716,"results":"15","hashOfConfig":"10"},{"size":2304,"mtime":1658992257408,"results":"16","hashOfConfig":"10"},{"size":2410,"mtime":1658996938056,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"iv90eu",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\index.js",[],["36","37"],"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\App.js",["38"],"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\store.js",[],"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\reportWebVitals.js",[],"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\usersSlice.js",[],"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\UserList.jsx",[],"C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\AddUser.jsx",["39"],"import { useState } from \"react\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userAdded } from \"./usersSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function AddUser() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleName = (e) => setName(e.target.value);\r\n    const handleEmail = (e) => setEmail(e.target.value);\r\n\r\n    const usersAmount = useSelector((state) => state.users.length);\r\n\r\n    const handleClick = () => {\r\n        if(name && email) {\r\n            dispatch(\r\n                userAdded({\r\n                    id: usersAmount + 1,\r\n                    name,\r\n                    email\r\n                })\r\n            );\r\n            setError(null);\r\n            history.push(\"/\");\r\n        } else {\r\n            setError(\"Fill in all fields.\")\r\n        }\r\n\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h1>Add User</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"three columns\">\r\n                    <label for=\"nameInput\">Name</label>\r\n                    <input \r\n                        className=\"u-full-width\"\r\n                        type=\"text\"\r\n                        placeholder=\"John Doe\"\r\n                        id=\"nameInput\"\r\n                        onChange={handleName}\r\n                        value={name}\r\n                    />\r\n                    <label for=\"emailInput\">Email</label>\r\n                    <input \r\n                        className=\"u-full-width\"\r\n                        type=\"email\"\r\n                        placeholder=\"example@test.com\"\r\n                        id=\"emailInput\"\r\n                        onChange={handleEmail}\r\n                        value={email}\r\n                    />\r\n                    {error && error}\r\n                    <button onClick={handleClick} className=\"button-primary\">Add User</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\riley\\source\\react_source\\redux-crud-app\\src\\features\\users\\EditUser.jsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":16},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'nanoid' is defined but never used.","no-global-assign","no-unsafe-negation"]